import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score 
import matplotlib.pyplot as plt
import io

csv_data = """SquareFootage,Bedrooms,Bathrooms,Price
1500,3,2,300000
1800,4,3,400000
2400,4,3,500000
1200,2,1,200000
2200,3,2,410000
1600,3,2,330000
1700,3,2,340000
2500,5,4,600000
1900,4,3,450000
1400,2,2,250000
"""

data = pd.read_csv(io.StringIO(csv_data))
print("Dataset Preview:\n", data.head())
X = data[['SquareFootage', 'Bedrooms', 'Bathrooms']]
y = data['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
print("\nModel Coefficients:", model.coef_)
print("Model Intercept:", model.intercept_)
print("Mean Squared Error (MSE):", mean_squared_error(y_test, y_pred))
print("R-squared Score:", r2_score(y_test, y_pred))
sample_house = np.array([[2000, 3, 2]])  # Example: 2000 sqft, 3 bedrooms, 2 bathrooms
predicted_price = model.predict(sample_house)
print(f"\nPredicted price for 2000 sqft, 3 BR, 2 Bath: ${predicted_price[0]:,.2f}")
plt.scatter(y_test, y_pred, color='green')
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--', lw=2)
plt.xlabel('Actual Price')
plt.ylabel('Predicted Price')
plt.title('Actual vs Predicted House Prices')
plt.grid(True)
plt.tight_layout()
plt.show()
